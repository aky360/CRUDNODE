

{
	"name":"product",
	"price":1200,
	"description":"this is a sample prodcut",
	"category":"laptop",
	"images":[{
		"public_id":"sample image",
		"url":"sample url"
	}]
}



/*notes === >>  in nested for loop; in this case break keyword breaks the inner loop and pointer goes to the outer loop then again the program execution starts from the outer loop*/

//const variableAny = this.Variable;                     // this.Variable returns the reference or addresss of variable(which is object)
                                                         //in javascript all object is pass through the reference.so when we change something then it changes reflect into the original object so that's why we use spread operator to copy the object value into the other variable in js


//so use use spread operator
//const variableAny = {...this.Variable};                //now the value is copied into the variableAny and no changes reflect into the js object this.Variable when we change into variableAny


http://localhost:4000/api/v1/product/new                       post
http://localhost:4000/api/v1/products                          get
http://localhost:4000/api/v1/product/628146b7daa3707f6399879a  put
http://localhost:4000/api/v1/product/628146b7daa3707f6399879a  delete/getDetails
